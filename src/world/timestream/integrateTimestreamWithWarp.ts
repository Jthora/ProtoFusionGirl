// integrateTimestreamWithWarp.ts
// Integration logic for TimestreamFramework and RealityWarpSystem/anchor system
import { TimestreamFramework, AnchorEvent } from './TimestreamFramework';
import { RealityWarpSystem, RealityWarpEvent } from '../RealityWarpSystem';

export function logWarpToTimestream(
  timestream: TimestreamFramework,
  warpEvent: RealityWarpEvent,
  playerId: string,
  getWorldState: () => any, // Function to serialize current world state
  setCurrentBranchId: (id: string) => void, // Callback to update session/game state
  parentBranchId?: string,
  extraMetadata?: Record<string, any>
) {
  const anchorEvent: AnchorEvent = {
    id: '', // Will be generated by TimestreamFramework
    anchorId: warpEvent.seed, // Use seed as anchorId for now
    playerId,
    timestamp: warpEvent.timestamp,
    location: warpEvent.gridCenter,
    worldSeed: warpEvent.seed,
    metadata: {
      ...warpEvent,
      ...extraMetadata
    }
  };
  const branchId = timestream.logAnchorEvent(anchorEvent, parentBranchId);
  timestream.captureWorldStateDiff(branchId, getWorldState);
  setCurrentBranchId(branchId);
  // Optionally: trigger multiplayer sync and UI update here
  return branchId;
}
