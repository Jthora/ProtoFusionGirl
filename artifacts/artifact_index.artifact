---
artifact: artifact_index
created: 2025-06-09
purpose: Manifest and metadata index for all artifacts in the folder.
type: index
tags: [index, manifest, automation]
format: json
---

[
  {
    "filename": "agent_optimized_ui_ux_2025-06-05.artifact",
    "artifact": "agent_optimized_ui_ux_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Design a modular, context-aware interface for both human and AI-driven play, supporting ASI/Jane roles.",
    "type": "uiux",
    "format": "markdown"
  },
  {
    "filename": "ai_onboarding_2025-06-03.artifact",
    "artifact": "ai_onboarding_2025-06-03",
    "created": "2025-06-03",
    "purpose": "Onboarding guide and checklist for new AI or human agents joining the ProtoFusionGirl project. Summarizes artifact types, key scripts, onboarding flow, and \"start here\" pointers.",
    "type": "onboarding",
    "tags": "[onboarding, ai, checklist, artifact, workflow, discoverability]",
    "format": "markdown",
    "related": "[copilot_advanced_todos_2025-06-03.artifact, copilot_memory.artifact, .primer, artifact_index.artifact]"
  },
  {
    "filename": "combat_mechanics.artifact",
    "artifact": "combat_mechanics",
    "created": "2025-06-03",
    "purpose": "Combat system logic, balancing notes, and sample data for ProtoFusionGirl.",
    "type": "design",
    "tags": "[combat, balancing, json]",
    "format": "json + markdown",
    "related": "["
  },
  {
    "filename": "community_modding_governance_2025-06-06.artifact",
    "artifact": "community_modding_governance_2025-06-06",
    "created": "2025-06-06",
    "purpose": "Plan for community-driven modding, DAO governance, and NFT-based content sharing.",
    "type": "design",
    "format": "markdown"
  },
  {
    "filename": "copilot_analytics_replay_story_2025-06-05.artifact",
    "artifact": "copilot_analytics_replay_story_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Design and prototype plan for analytics, replay, and emergent storytelling support for ProtoFusionGirl.",
    "type": "design",
    "format": "markdown",
    "related": "[master_multiverse_systems_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_anchor_leyline_system_2025-06-06.artifact",
    "artifact": "copilot_anchor_leyline_system_2025-06-06",
    "created": "2025-06-06",
    "purpose": "Development anchor for the Ley Line System overhaul and integration with Jane and the Magneto Speeder.",
    "type": "anchor",
    "tags": "[leyline, navigation, magneto_speeder, jane, world, integration, roadmap, copilot]",
    "related": "[src/world/leyline/, src/core/Jane.ts, src/magneto/MagnetoSpeeder.ts, artifacts/copilot_feature_roadmap_2025-06-04.artifact, docs/FusionGirl_ Video Game Document - Gameplay Mechanics.md]"
  },
  {
    "filename": "copilot_anchor_ui_ux_2025-06-04.artifact",
    "artifact": "copilot_anchor_ui_ux_2025-06-04",
    "created": "2025-06-04",
    "purpose": "Anchor management UI/UX improvements for ProtoFusionGirl reality warping system.",
    "type": "design",
    "format": "markdown",
    "tags": "[reality-warping, anchor-management, ui-ux, code-artifact]",
    "related": "[copilot_reality_warping_code_plan_2025-06-04.artifact]"
  },
  {
    "filename": "copilot_build_instructions_2025-06-03.artifact",
    "artifact": "copilot_build_instructions_2025-06-03",
    "created": "2025-06-03",
    "purpose": "Step-by-step instructions for GitHub Copilot (or any AI agent) to build, maintain, and optimize the ProtoFusionGirl artifact-driven, automation-first workflow.",
    "type": "instructions",
    "format": "markdown",
    "tags": "[instructions, build, ai, copilot, automation, artifact, onboarding, dashboard]",
    "related": "[.primer, artifact_index.artifact, copilot_advanced_todos_2025-06-03.artifact, ai_onboarding_2025-06-03.artifact, project_dashboard.js]"
  },
  {
    "filename": "copilot_context_anchor_index_2025-06-05.artifact",
    "artifact": "copilot_context_anchor_index_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Index of all critical context anchors (design docs, code entry points, onboarding files, persistent state) for rapid lookup and context recall.",
    "type": "context-index",
    "tags": "[context, index, anchor, copilot, artifact, workflow]",
    "format": "markdown",
    "related": "[copilot_development_anchor_roadmap_2025-06-05.artifact, copilot_feature_matrix_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_cosmic_env_simulation_2025-06-05.artifact",
    "artifact": "copilot_cosmic_env_simulation_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Design and prototype plan for a cosmic/environmental simulation layer for ProtoFusionGirl.",
    "type": "design",
    "format": "markdown",
    "related": "[master_multiverse_systems_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_development_anchor_roadmap_2025-06-05.artifact",
    "artifact": "copilot_development_anchor_roadmap_2025-06-05",
    "created": "2025-06-05",
    "purpose": "High-level, prioritized roadmap for implementing missing and incomplete systems in ProtoFusionGirl. Anchors Copilot/AI development and ensures alignment with design docs, onboarding, and gameplay experience.",
    "type": "roadmap",
    "tags": "[roadmap, anchor, copilot, onboarding, priorities, artifact, workflow]",
    "format": "markdown",
    "related": "[copilot_feature_matrix_2025-06-05.artifact, copilot_context_anchor_index_2025-06-05.artifact, copilot_missing_systems_checklist_2025-06-05.artifact, copilot_onboarding_and_memory_expansion_2025-06-05.artifact, copilot_feedback_and_blockers_log_2025-06-05.artifact, .primer, .manifest, .priming, gameplay_alignment_checklist_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_feature_matrix_2025-06-05.artifact",
    "artifact": "copilot_feature_matrix_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Matrix mapping all major game features to their implementation status, key files, and responsible modules. Anchors Copilot/AI context and progress tracking.",
    "type": "feature-matrix",
    "tags": "[feature, matrix, status, copilot, artifact, workflow]",
    "format": "markdown",
    "related": "[copilot_development_anchor_roadmap_2025-06-05.artifact, copilot_context_anchor_index_2025-06-05.artifact, copilot_missing_systems_checklist_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_feedback_and_blockers_log_2025-06-05.artifact",
    "artifact": "copilot_feedback_and_blockers_log_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Central log for blockers, feedback, and lessons learned during Copilot/AI implementation. Ensures continuous improvement and context recall.",
    "type": "feedback-log",
    "tags": "[feedback, blockers, log, copilot, artifact, workflow]",
    "format": "markdown",
    "related": "[copilot_development_anchor_roadmap_2025-06-05.artifact, copilot_feature_matrix_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_leyline_system_advanced_development_2025-06-07.artifact",
    "artifact": "copilot_leyline_system_advanced_development_2025-06-07",
    "created": "2025-06-07",
    "purpose": "Guide and anchor the advanced, modular, and future-proof development of the ley line system, traversal, and related gameplay features in ProtoFusionGirl.",
    "type": "development-plan",
    "status": "active",
    "related": "[copilot_leyline_unification_plan_2025-06-07.artifact, copilot_anchor_leyline_system_2025-06-06.artifact, src/world/leyline/, src/core/Jane.ts, src/magneto/MagnetoSpeeder.ts, docs/FusionGirl_ Video Game Document - Gameplay Mechanics.md]",
    "tags": "[leyline, traversal, modular, procedural, pathfinding, events, visualization, roadmap, copilot]",
    "- **Single Source of Truth": "** All ley line data and logic centralized in canonical manager and interfaces.",
    "- **Modularity": "** Separate concerns for pathfinding, procedural generation, events, and visualization.",
    "- **Extensibility": "** Easy to add new features (e.g., ley line manipulation, AI, advanced events).",
    "- **Testability": "** Each module and integration point is covered by unit/integration tests.",
    "- **Artifact-Driven": "** All code, docs, and PRs reference this and related artifacts."
  },
  {
    "filename": "copilot_leyline_tilemap_traversal_integration_2025-06-07.artifact",
    "artifact": "copilot_leyline_tilemap_traversal_integration_2025-06-07",
    "created": "2025-06-07",
    "purpose": "Guide and document the integration of the advanced ley line system with world travel and tilemap data in ProtoFusionGirl.",
    "type": "integration-plan",
    "status": "active",
    "related": "[copilot_leyline_system_advanced_development_2025-06-07.artifact, src/world/leyline/, src/world/WorldTraversalSystem.ts, src/world/tilemap/, docs/FusionGirl_ Video Game Document - Gameplay Mechanics.md, artifacts/gameplay_alignment_checklist_2025-06-05.artifact]",
    "tags": "[leyline, tilemap, traversal, integration, pathfinding, procedural, worldgen, copilot, lore, gameplay]",
    "- **Tilemap Awareness": "** Ley line procedural generation and pathfinding must respect tilemap constraints (walkability, obstacles, biomes).",
    "- **Traversal Synergy": "** World traversal logic should leverage ley lines for fast travel, energy management, and special abilities.",
    "- **Event Interoperability": "** Ley line events can trigger or respond to tile/world events (e.g., surges opening new paths, disruptions blocking routes).",
    "- **Single Source of Truth": "** All ley line and tilemap data should be synchronized and accessible via canonical managers.",
    "- **Testability": "** All integration points must be covered by unit/integration tests.",
    "- **Edge Case Handling": "** Integration must account for impassable terrain, dynamic world changes, and hybrid/fallback routing.",
    "- **Ownership & Milestones": "** Each step should have a responsible party and suggested milestone.",
    "- **Emergent Gameplay & Player Agency": "** The system must support player and AI manipulation of ley lines, enabling emergent puzzles, traversal, and world events.",
    "- **UI/UX & Player Feedback": "** Ley line state and events must be visualized in the UI, with clear feedback for both narrative and strategic play. Provide overlays, minimap cues, and in-world effects for ley line changes.",
    "- **Playtesting & Iteration": "** After each major integration milestone, conduct playtests to ensure ley line mechanics are fun, understandable, and narratively aligned. Use feedback to iterate on both technical and narrative aspects.",
    "- **Gameplay Alignment": "** All ley line features must be checked against the gameplay alignment checklist and referenced artifacts to ensure consistency with the intended experience.",
    "- **LeyLineProceduralGen** should accept a tilemap or walkability callback": "",
    "generateNetwork(nodeCount": "number, tileIsWalkable: (x: number, y: number) => boolean): LeyLineNetwork",
    "- **LeyLinePathfinder** should expose hybrid pathfinding": "",
    "findHybridPath(start": "Vector2, end: Vector2, tileIsWalkable: (x: number, y: number) => boolean): PathResult",
    "- **Event Payload Example": "**",
    "{ \"type\"": "\"LEYLINE_SURGE\", \"affectedTiles\": [{\"x\":10,\"y\":12}], \"effect\": \"unlock\", \"lore\": \"The lost city awakens as the ley surge passes.\" }",
    "- Allow hybrid routes": "ley line fast travel + tile-based movement.",
    "1. **Extend LeyLineProceduralGen** to accept tilemap data and snap nodes to valid tiles. *(Owner": "World/Procedural Team, Milestone: v0.1)*",
    "2. **Update LeyLinePathfinder** to combine ley line and tile-based pathfinding. *(Owner": "Pathfinding Team, Milestone: v0.2)*",
    "3. **Refactor WorldTraversalSystem** to use ley line APIs for route planning and movement effects. *(Owner": "Traversal Team, Milestone: v0.3)*",
    "4. **Add event hooks** between ley line and tile/world event systems. *(Owner": "Events Team, Milestone: v0.4)*",
    "5. **Expand tests** to cover edge cases (impassable terrain, dynamic events, hybrid routes). *(Owner": "QA/Testing, Milestone: v0.5)*",
    "6. **Update documentation** to reflect new integration points and APIs. *(Owner": "Docs/Onboarding, Milestone: v0.6)*",
    "7. **Legacy Migration**": "Migrate or deprecate legacy ley line/tile code. *(Owner: Migration Lead, Milestone: v1.0)*",
    "8. **Playtesting & Narrative Review": "** Conduct playtests and narrative review after each milestone. *(Owner: Design/Narrative, Milestone: each major version)*",
    "- **Unit Tests": "** For all new/modified functions (e.g., node placement, hybrid pathfinding).",
    "- **Integration Tests": "** For traversal across ley lines and tiles, event propagation, and edge cases.",
    "- **Test Scenarios": "**",
    "- **Coverage Goal": "** 90%+ for all integration code."
  },
  {
    "filename": "copilot_leyline_unification_plan_2025-06-07.artifact",
    "artifact": "copilot_leyline_unification_plan_2025-06-07",
    "created": "2025-06-07",
    "purpose": "Anchor and guide the unification and refactor of the ley line system to eliminate redundancy and ensure a single, robust source of truth for all ley line logic.",
    "type": "plan",
    "tags": "[leyline, refactor, unification, world, navigation, copilot, roadmap]",
    "related": "[src/world/leyline/LeyLineManager.ts, src/leyLines.ts, src/world/WorldStateManager.ts, src/world/leyline/LeyLineSystem.ts, artifacts/copilot_anchor_leyline_system_2025-06-06.artifact]"
  },
  {
    "filename": "copilot_memory.artifact",
    "artifact": "copilot_memory",
    "created": "2025-06-03",
    "purpose": "Persistent, high-value memory and heuristics for the Copilot/AI agent. Stores lessons, context, and reusable strategies for automation, onboarding, and project optimization.",
    "type": "memory",
    "tags": "[memory, ai, context, heuristics, onboarding, automation]",
    "format": "markdown",
    "related": "[copilot_next_steps_2025-06-03.artifact, copilot_todos_2025-06-03.artifact, protoFusionGirl.primer, artifact_index.artifact]"
  },
  {
    "filename": "copilot_missing_systems_checklist_2025-06-05.artifact",
    "artifact": "copilot_missing_systems_checklist_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Actionable checklist of all missing or stubbed systems, with links to relevant design artifacts and code stubs.",
    "type": "checklist",
    "tags": "[checklist, missing, systems, copilot, artifact, workflow]",
    "format": "markdown",
    "related": "[copilot_development_anchor_roadmap_2025-06-05.artifact, copilot_feature_matrix_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_modding_extension_points_2025-06-05.artifact",
    "artifact": "copilot_modding_extension_points_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Document all current and planned extension/modding points in the codebase for rapid modder onboarding and future-proofing.",
    "type": "modding-index",
    "tags": "[modding, extension, hooks, copilot, artifact, workflow]",
    "format": "markdown",
    "related": "[copilot_development_anchor_roadmap_2025-06-05.artifact, copilot_feature_matrix_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_multiverse_event_engine_2025-06-05.artifact",
    "artifact": "copilot_multiverse_event_engine_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Design and prototype plan for a branch-aware event and narrative state engine for ProtoFusionGirl.",
    "type": "design",
    "format": "markdown",
    "related": "[master_multiverse_systems_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_multiverse_priority_todo_2025-06-05.artifact",
    "artifact": "copilot_multiverse_priority_todo_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Ordered, prioritized TODO list for ProtoFusionGirl multiverse systems, derived from artifact review and integration points.",
    "type": "todo-list",
    "format": "markdown",
    "related": ""
  },
  {
    "filename": "copilot_multiverse_sync_sharing_2025-06-05.artifact",
    "artifact": "copilot_multiverse_sync_sharing_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Design and prototype plan for a multiverse synchronization and sharing layer for ProtoFusionGirl.",
    "type": "design",
    "format": "markdown",
    "related": "[master_multiverse_systems_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_onboarding_and_memory_expansion_2025-06-05.artifact",
    "artifact": "copilot_onboarding_and_memory_expansion_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Guide for expanding Copilot/AI onboarding and persistent memory as new systems are implemented. Ensures context sync and onboarding remain up to date.",
    "type": "onboarding-guide",
    "tags": "[onboarding, memory, copilot, artifact, workflow]",
    "format": "markdown",
    "related": "[copilot_development_anchor_roadmap_2025-06-05.artifact, copilot_feature_matrix_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_persona_core_architecture_2025-06-04.artifact",
    "artifact": "copilot_persona_core_architecture_2025-06-04",
    "created": "2025-06-04",
    "purpose": "Dramatically expanded design, architecture, and automation plan for the Persona Core system in ProtoFusionGirl",
    "format": "markdown",
    "tags": "[persona, ai, copilot, architecture, automation, onboarding, decision, self-prompt, dashboard]",
    "related": "[data/persona_core.json, copilot_persona_core_design_2025-06-04.artifact, ONBOARDING.md, scripts/]"
  },
  {
    "filename": "copilot_persona_core_design_2025-06-04.artifact",
    "artifact": "copilot_persona_core_design_2025-06-04",
    "created": "2025-06-04",
    "purpose": "Design and best practices for implementing a dynamic, AI/human-aligned Persona Core for ProtoFusionGirl",
    "format": "markdown",
    "tags": "[persona, ai, copilot, decision, onboarding, automation, context, self-prompt]",
    "related": "[ONBOARDING.md, data/self_prompt_queue.json, tasks/task_index.json]"
  },
  {
    "filename": "copilot_priming.artifact",
    "title": "Copilot Priming Artifact",
    "created": "2025-06-05",
    "purpose": "Machine-readable, always-updated context for Copilot/AI agents."
  },
  {
    "filename": "copilot_prioritized_work_2025-06-08.artifact",
    "artifact": "copilot_prioritized_work_2025-06-08.artifact",
    "created": "2025-06-08",
    "last_updated": "2025-06-08",
    "owner": "GitHub Copilot",
    "status": "draft",
    "reviewed_by": "null",
    "related_artifacts": "",
    "dependencies": "",
    "- **Artifact Version": "** 2025-06-08",
    "- **Maintainer": "** GitHub Copilot",
    "- **Status": "** Draft (pending review)",
    "- **Scope": "** Core systems, onboarding, automation, documentation, and feedback",
    "- **Review cadence": "** Weekly or after major PRs",
    "- **Artifact": "** A structured, versioned document describing system design, plans, or validation.",
    "- **Agent": "** Any AI or human contributor following artifact-driven workflows.",
    "- **Traceability": "** The ability to cross-reference code, documentation, and artifacts.",
    "- **Blocker": "** Any issue preventing progress, to be logged and escalated.",
    "**Goal": "** Maximize discoverability and onboarding for all contributors."
  },
  {
    "filename": "copilot_procedural_content_registry_2025-06-05.artifact",
    "artifact": "copilot_procedural_content_registry_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Design and prototype plan for a procedural content registry and modding API for ProtoFusionGirl.",
    "type": "design",
    "format": "markdown",
    "related": "[master_multiverse_systems_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_reality_warping_code_plan_2025-06-04.artifact",
    "artifact": "copilot_reality_warping_code_plan_2025-06-04",
    "created": "2025-06-04",
    "purpose": "Code plan for grid-to-seed reality warping as a core physics/world mechanic in ProtoFusionGirl.",
    "type": "design",
    "format": "markdown",
    "tags": "[reality-warping, worldgen, tilemap, physics, artifact, code-plan]",
    "related": "[copilot_reality_warping_design_2025-06-04.artifact, copilot_warp_anchor_systems_2025-06-04.artifact, copilot_timestreams_and_warp_zones_2025-06-04.artifact]"
  },
  {
    "filename": "copilot_reality_warping_feature_brainstorm_2025-06-04.artifact"
  },
  {
    "filename": "copilot_script_tools_2025-06-04.artifact",
    "# Artifact": "copilot_content_consistency_checker_2025-06-04.artifact",
    "- Optional": "filter by type, output format"
  },
  {
    "filename": "copilot_toroidal_best_practices_2025-06-04.artifact",
    "artifact": "copilot_toroidal_best_practices_2025-06-04",
    "created": "2025-06-05",
    "purpose": "Document best practices, guidelines, and common pitfalls for applying toroidal math in ProtoFusionGirl.",
    "type": "best-practices",
    "format": "markdown",
    "related": ""
  },
  {
    "filename": "copilot_toroidal_math_usage_examples_2025-06-04.artifact",
    "artifact": "copilot_toroidal_math_usage_examples_2025-06-04",
    "created": "2025-06-05",
    "purpose": "Provide concrete code examples and test cases for using toroidal math utilities in ProtoFusionGirl.",
    "type": "example",
    "format": "markdown + code",
    "related": ""
  },
  {
    "filename": "copilot_universal_language_engine_2025-06-05.artifact",
    "artifact": "copilot_universal_language_engine_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Design and prototype plan for a Universal Language and puzzle scripting engine for ProtoFusionGirl.",
    "type": "design",
    "format": "markdown",
    "related": "[master_multiverse_systems_2025-06-05.artifact]"
  },
  {
    "filename": "copilot_web3_integration_blockers_2025-06-04.artifact",
    "artifact_id": "copilot_web3_integration_blockers_2025-06-04",
    "artifact_type": "blockers",
    "last_updated": "2025-06-04",
    "related_artifacts": "",
    "blockers": "",
    "- id": "b4",
    "description": "Documentation for web3 flows is incomplete.",
    "severity": "medium",
    "owner": "unassigned",
    "status": "open",
    "open_questions": "",
    "next_actions": ""
  },
  {
    "filename": "copilot_web3_integration_checklist_2025-06-04.artifact",
    "artifact_id": "copilot_web3_integration_checklist_2025-06-04",
    "artifact_type": "checklist",
    "last_updated": "2025-06-04",
    "related_artifacts": "",
    "items": "",
    "- id": "w3-12",
    "description": "Create troubleshooting/FAQ docs for web3 onboarding",
    "status": "pending",
    "assignee": "unassigned",
    "related_artifact": "copilot_web3_integration_roadmap_2025-06-04"
  },
  {
    "filename": "copilot_web3_integration_faq_2025-06-04.artifact",
    "artifact_id": "copilot_web3_integration_faq_2025-06-04",
    "artifact_type": "faq",
    "last_updated": "2025-06-04",
    "related_artifacts": "",
    "faqs": "",
    "- question": "How do I deploy the ModRegistry contract?",
    "answer": "Use Hardhat scripts to deploy to Polygon Mumbai. See the roadmap and checklist artifacts for details.",
    "tags": "[deployment, contract]",
    "related_artifact": "copilot_web3_integration_roadmap_2025-06-04"
  },
  {
    "filename": "copilot_web3_integration_roadmap_2025-06-04.artifact",
    "artifact_id": "copilot_web3_integration_roadmap_2025-06-04",
    "artifact_type": "roadmap",
    "last_updated": "2025-06-04",
    "related_artifacts": "",
    "phases": "",
    "- phase": "Documentation & Artifacts",
    "tasks": "",
    "- id": "w3-12",
    "description": "Update onboarding and modding guides",
    "status": "pending"
  },
  {
    "filename": "copilot_web3_integration_status_2025-06-04.artifact",
    "artifact_id": "copilot_web3_integration_status_2025-06-04",
    "artifact_type": "status",
    "last_updated": "2025-06-04",
    "related_artifacts": "",
    "current_state": "",
    "blockers": "",
    "next_steps": ""
  },
  {
    "filename": "copilot_world_state_tooling_2025-06-05.artifact",
    "artifact": "copilot_world_state_tooling_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Design and prototype plan for world state diffing, visualization, and debugging tools for ProtoFusionGirl.",
    "type": "design",
    "format": "markdown",
    "related": "[master_multiverse_systems_2025-06-05.artifact]"
  },
  {
    "filename": "deep_ai_self_autonomy_design_2025-06-03.artifact",
    "format": "(auto-repaired)",
    "tags": "(auto-repaired)",
    "created": "(auto-repaired)",
    "artifact": "(auto-repaired)",
    "type": "design",
    "purpose": "Deep Design for Full AI Self-Autonomy in ProtoFusionGirl",
    "date": "2025-06-03",
    "related": "aiAutonomousDevLoop.js, self_prompt_pipeline_instructions.artifact, ONBOARDING.md"
  },
  {
    "filename": "directory_migration_plan_2025-06-04.artifact",
    "artifact": "directory_migration_plan_2025-06-04",
    "created": "2025-06-04",
    "purpose": "Step-by-step migration plan to transition ProtoFusionGirl to the proposed directory structure.",
    "type": "migration-plan",
    "format": "markdown",
    "tags": "[directory, migration, plan, structure, onboarding]",
    "related": "[proposed_directory_structure_2025-06-04.artifact, directory_structure_2025-06-04.artifact, ONBOARDING.md]"
  },
  {
    "filename": "directory_structure_2025-06-03.artifact",
    "artifact": "directory_structure_2025-06-03",
    "created": "2025-06-03",
    "purpose": "Snapshot of the full project directory structure for context and change tracking.",
    "type": "directory",
    "tags": "[directory, structure, snapshot, context]",
    "format": "markdown"
  },
  {
    "filename": "directory_structure_2025-06-04.artifact",
    "artifact": "directory_structure_2025-06-04",
    "created": "2025-06-04",
    "purpose": "Snapshot of the full project directory structure for context and change tracking.",
    "type": "directory",
    "tags": "[directory, structure, snapshot, context]",
    "format": "markdown"
  },
  {
    "filename": "event_bus_spec_2025-06-04.artifact",
    "artifact": "event_bus_spec_2025-06-04",
    "name": "Event Bus & Event System Specification",
    "created": "2025-06-04",
    "purpose": "Details requirements, API, and usage patterns for the event system in ProtoFusionGirl.",
    "type": "spec",
    "format": "markdown",
    "tags": "[event, bus, system, api, design, core]"
  },
  {
    "filename": "event_contracts_2025-06-07.artifact"
  },
  {
    "filename": "feedback_2025-06-03.artifact",
    "artifact": "feedback_2025-06-03",
    "created": "2025-06-03",
    "purpose": "Log blockers, insights, and workflow improvements for Copilot/AI and human collaborators.",
    "type": "feedback",
    "tags": "[feedback, workflow, blockers, insights, improvement]",
    "format": "markdown",
    "related": "["
  },
  {
    "filename": "gameplay_alignment_checklist_2025-06-05.artifact",
    "artifact": "gameplay_alignment_checklist_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Checklist for ensuring all code, features, and PRs align with the intended gameplay experience blueprint.",
    "type": "checklist",
    "format": "markdown"
  },
  {
    "filename": "gameplay_experience_blueprint_2025-06-05.artifact",
    "artifact": "gameplay_experience_blueprint_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Blueprint for the intended player experience, ASI/Jane duality, and core gameplay loops in ProtoFusionGirl.",
    "type": "design",
    "format": "markdown"
  },
  {
    "filename": "gamescene_core_audit_2025-06-05.artifact",
    "- [x] System/module file(s) exist in expected location(s)": "`src/scenes/GameScene.ts`"
  },
  {
    "filename": "ley_line_system_design_2025-06-06.artifact",
    "artifact": "ley_line_system_design_2025-06-06",
    "created": "2025-06-06",
    "purpose": "Design and technical specification for the modular ley line and world network system in FusionGirl.",
    "type": "design",
    "format": "markdown"
  },
  {
    "filename": "leyline_system_integration_2025-06-04.artifact",
    "- **WorldStateManager": "** Reads and updates ley line state, with schema validation and versioning.",
    "- **EventBus": "** Listens for and emits events (e.g., `LEYLINE_ACTIVATED`) to enable cross-system reactions and mod hooks.",
    "- Tests confirm": ""
  },
  {
    "filename": "magneto_speeder_gameplay_foundation_2025-06-06.artifact",
    "artifact": "magneto_speeder_gameplay_foundation_2025-06-06",
    "created": "2025-06-06",
    "purpose": "Anchor and roadmap for developing the Magneto Speeder as a core gameplay system for Jane (FusionGirl).",
    "type": "design+roadmap",
    "format": "markdown"
  },
  {
    "filename": "magneto_speeder_mechanics_2025-06-06.artifact",
    "artifact": "magneto_speeder_mechanics_2025-06-06",
    "created": "2025-06-06",
    "purpose": "Design and implementation plan for Magneto Speeder traversal, upgrades, and player experience.",
    "type": "design",
    "format": "markdown"
  },
  {
    "filename": "master_multiverse_systems_2025-06-05.artifact",
    "artifact": "master_multiverse_systems_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Master plan and artifact index for all core technical systems required to realize ProtoFusionGirl's multiverse, timeline, and reality-warping vision.",
    "type": "master-design",
    "format": "markdown",
    "related": ""
  },
  {
    "filename": "modding_automation_integration_2025-06-05.artifact",
    "artifact": "modding_automation_integration_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Define extension points, plugin patterns, and automation hooks for mods, AI agents, and community content.",
    "type": "api",
    "format": "markdown"
  },
  {
    "filename": "modregistry_deploy_instructions_mumbai_2025-06-04.artifact",
    "title": "ModRegistry Polygon Mumbai Deployment Instructions",
    "id": "w3-6-deploy-instructions",
    "status": "complete",
    "created": "2025-06-04",
    "related_artifact": "copilot_web3_integration_checklist_2025-06-04"
  },
  {
    "filename": "modular_game_loop_2025-06-05.artifact",
    "artifact": "modular_game_loop_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Modular breakdown of the main and supplementary gameplay loops for extensibility and testing.",
    "type": "design",
    "format": "markdown"
  },
  {
    "filename": "modular_game_loop_registered_systems_2025-06-08.artifact",
    "artifact": "modular_game_loop_registered_systems_2025-06-08.artifact",
    "created": "2025-06-08",
    "last_updated": "2025-06-08",
    "owner": "GitHub Copilot",
    "status": "draft",
    "related_artifacts": ""
  },
  {
    "filename": "narrative_feedback_integration_2025-06-05.artifact",
    "artifact": "narrative_feedback_integration_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Specify how player actions affect the world, Jane, and the multiverse, and how feedback is delivered.",
    "type": "design",
    "format": "markdown"
  },
  {
    "filename": "onboarding_narrative_flow_2025-06-06.artifact",
    "artifact": "onboarding_narrative_flow_2025-06-06",
    "created": "2025-06-06",
    "purpose": "Narrative-driven onboarding and tutorial plan for progressive feature introduction.",
    "type": "onboarding",
    "format": "markdown"
  },
  {
    "filename": "persona_core_changelog_2025-06-04.artifact",
    "artifact": "persona_core_changelog_2025-06-04",
    "created": "2025-06-04",
    "purpose": "Human-readable changelog for all Persona Core module updates and reviews",
    "format": "markdown"
  },
  {
    "filename": "persona_core_dashboard_2025-06-04.artifact",
    "artifact": "persona_core_dashboard_2025-06-04",
    "created": "2025-06-04",
    "purpose": "Persona Core Dashboard - summary of current values, focus, heuristics, and integration for all contributors",
    "format": "markdown"
  },
  {
    "filename": "phase1_brainstorm.artifact",
    "artifact": "phase1_brainstorm",
    "created": "2025-06-03",
    "purpose": "Initial brainstorming and raw idea capture for ProtoFusionGirl game development.",
    "type": "brainstorm",
    "tags": "[ideas, vision, planning]",
    "format": "markdown",
    "related": "["
  },
  {
    "filename": "player_asi_architecture_2025-06-05.artifact",
    "artifact": "player_asi_architecture_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Define the technical separation and interaction between the ASI (player) and Jane (avatar).",
    "type": "architecture",
    "format": "markdown"
  },
  {
    "filename": "progression_system_2025-06-03.artifact",
    "artifact": "progression_system_2025-06-03",
    "created": "2025-06-03",
    "purpose": "Design vision, requirements, and initial plan for a core progression/quest system in ProtoFusionGirl.",
    "type": "design",
    "tags": "[progression, quest, gameplay, system, design, artifact]",
    "format": "markdown",
    "related": "[combat_mechanics.artifact, tilemap_system_design.artifact, phase1_brainstorm.artifact]"
  },
  {
    "filename": "project_state_2025-06-03.artifact",
    "artifact": "project_state_2025-06-03",
    "created": "2025-06-03",
    "purpose": "Summarize current project state, open questions, and next priorities for both AI and human contributors.",
    "type": "state",
    "format": "markdown",
    "tags": "[state, summary, next-steps, ai, onboarding, artifact, workflow]",
    "related": "[copilot_advanced_todos_2025-06-03.artifact, ai_onboarding_2025-06-03.artifact, copilot_next_steps_2025-06-03.artifact, protoFusionGirl.primer]"
  },
  {
    "filename": "proposed_directory_structure_2025-06-04.artifact",
    "artifact": "proposed_directory_structure_2025-06-04",
    "created": "2025-06-04",
    "purpose": "Proposed improved directory structure for future scalability, onboarding, and modularity.",
    "type": "directory",
    "format": "markdown",
    "tags": "[directory, structure, proposal, future, onboarding]",
    "related": "[directory_structure_2025-06-04.artifact, ONBOARDING.md, phase1_brainstorm.artifact]"
  },
  {
    "filename": "retrospective_tilemap_2025-06-03.artifact",
    "artifact": "retrospective_tilemap_2025-06-03",
    "created": "2025-06-03",
    "purpose": "Retrospective for initial tilemap system design and integration.",
    "type": "retrospective",
    "tags": "[retrospective, tilemap, milestone, summary]",
    "format": "markdown",
    "related": "["
  },
  {
    "filename": "save_system_design_2025-06-05.artifact",
    "artifact": "save_system_design_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Design and prototype plan for an advanced, seed/delta/timeline-aware save/load system for ProtoFusionGirl.",
    "type": "design",
    "format": "markdown",
    "related": "[tilemap_system_design.artifact, copilot_reality_warping_code_plan_2025-06-04.artifact, copilot_timestream_code_plan_2025-06-04.artifact, WorldPersistence.ts, TilemapManager.ts]"
  },
  {
    "filename": "scripts_full_esmodule_migration_plan_2025-06-03.artifact",
    "artifact": "scripts_full_esmodule_migration_plan_2025-06-03",
    "created": "2025-06-04",
    "purpose": "(auto-repaired, add purpose)",
    "type": "unknown",
    "tags": "[auto-repaired]",
    "format": "markdown"
  },
  {
    "filename": "scripts_index.artifact",
    "artifact": "scripts_index",
    "created": "2025-06-03",
    "purpose": "Auto-generated index of all scripts, their usage, options, and onboarding relevance for Copilot/AI agent workflows.",
    "type": "index",
    "tags": "[script, index, automation, ai, copilot]",
    "related": "[artifact_index.artifact, aiTaskManager.js, listScripts.js]",
    "format": "markdown"
  },
  {
    "filename": "self_healing_automation_2025-06-06.artifact",
    "artifact": "self_healing_automation_2025-06-06",
    "created": "2025-06-06",
    "purpose": "Automation and self-healing plan for validation, feedback, and artifact generation.",
    "type": "automation",
    "format": "markdown"
  },
  {
    "filename": "self_prompt_pipeline_instructions.artifact",
    "artifact": "self_prompt_pipeline_instructions_2025-06-03",
    "created": "2025-06-03",
    "purpose": "Instructions and best practices for using the Copilot Self-Prompt Pipeline for autonomous, iterative development cycles.",
    "type": "instructions",
    "tags": "[self-prompt, automation, ai, copilot, pipeline, queue, iterative, onboarding]",
    "related": "[selfPromptPipeline.js, copilot_todo_automation_upgrades_2025-06-03.artifact]",
    "format": "markdown"
  },
  {
    "filename": "super_integration_plan_2025-06-04.artifact",
    "- **Phase 1": "Foundation**",
    "- **Phase 2": "Core System Implementation**",
    "- **Phase 3": "Cross-System Features**",
    "- **Phase 4": "Modding & Automation**",
    "- **Phase 5": "Continuous Improvement**"
  },
  {
    "filename": "tech_level_angel.artifact",
    "artifact": "tech_level_angel",
    "name": "Angel Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type VI (Multiversal) - Angel Tech in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, multiversal, type6]"
  },
  {
    "filename": "tech_level_archo.artifact",
    "artifact": "tech_level_archo",
    "name": "Archo Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type IV+ (Interdimensional) - Archo Tech in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, interdimensional, type4]"
  },
  {
    "filename": "tech_level_ascendant.artifact",
    "artifact": "tech_level_ascendant",
    "name": "Ascendant Tech",
    "created": "2025-06-04",
    "purpose": "Canonical master artifact for Type III (Ascendant) tech level in FusionGirl.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding]"
  },
  {
    "filename": "tech_level_cyber.artifact",
    "artifact": "tech_level_cyber",
    "name": "Cyber Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type I (Early) - Cyber Tech (Electrospheric/Information Age) in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, electrospheric, type1]"
  },
  {
    "filename": "tech_level_data_model.artifact",
    "artifact": "tech_level_data_model",
    "created": "2025-06-04",
    "purpose": "Canonical data structure for tech levels in code and artifacts.",
    "type": "schema",
    "tags": "[tech, data, schema, artifact, automation]",
    "format": "typescript"
  },
  {
    "filename": "tech_level_feedback_and_retrospective.artifact",
    "artifact": "tech_level_feedback_and_retrospective",
    "created": "2025-06-04",
    "purpose": "Capture feedback, blockers, and lessons learned during tech level development.",
    "type": "retrospective",
    "tags": "[tech, feedback, retrospective, artifact]",
    "format": "markdown"
  },
  {
    "filename": "tech_level_fusion.artifact",
    "artifact": "tech_level_fusion",
    "name": "Fusion Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type II (Early) - Fusion Tech (Astrospheric/Astral Age) in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, astrospheric, type2]"
  },
  {
    "filename": "tech_level_gameplay_mapping.artifact",
    "artifact": "tech_level_gameplay_mapping",
    "created": "2025-06-04",
    "purpose": "Map tech levels to gameplay unlocks, features, and systems.",
    "type": "mapping",
    "tags": "[tech, gameplay, mapping, artifact]",
    "format": "markdown"
  },
  {
    "filename": "tech_level_holo.artifact",
    "artifact": "tech_level_holo",
    "name": "Holo Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type I (Late) - Holo Tech (Magnetospheric/Holographic Age) in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, magnetospheric, type1]"
  },
  {
    "filename": "tech_level_hyper.artifact",
    "artifact": "tech_level_hyper",
    "name": "Hyper Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type III (Mid) - Hyper Tech in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, type3]"
  },
  {
    "filename": "tech_level_index.artifact",
    "artifact": "tech_level_index",
    "name": "Tech Level Index",
    "created": "2025-06-04",
    "purpose": "Canonical index of all tech level artifacts in FusionGirl, ordered and classified per design documentation.",
    "type": "index",
    "format": "markdown",
    "tags": "[index, tech, progression, worldbuilding]"
  },
  {
    "filename": "tech_level_industrial.artifact",
    "artifact": "tech_level_industrial",
    "name": "Industrial Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type 0 (Late) - Industrial Tech (Atmospheric/Atomic Age) in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, atmospheric, type0]"
  },
  {
    "filename": "tech_level_integration_tasks.artifact",
    "artifact": "tech_level_integration_tasks",
    "created": "2025-06-04",
    "purpose": "List actionable tasks for integrating tech levels into code, UI, and automation.",
    "type": "tasks",
    "tags": "[tech, integration, tasks, artifact]",
    "format": "yaml"
  },
  {
    "filename": "tech_level_magic.artifact",
    "artifact": "tech_level_magic",
    "name": "Magic Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type V (Universal) - Magic Tech in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, universal, type5]"
  },
  {
    "filename": "tech_level_medieval.artifact",
    "artifact": "tech_level_medieval",
    "name": "Medieval Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type 0 (Mid) - Medieval Tech in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, type0]"
  },
  {
    "filename": "tech_level_neolithic.artifact",
    "artifact": "tech_level_neolithic",
    "name": "Neolithic Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type 0 (Early) - Neolithic Tech (Lithospheric Age) in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, lithospheric, type0]"
  },
  {
    "filename": "tech_level_omni.artifact",
    "artifact": "tech_level_omni",
    "name": "Omni Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type VII (Omniversal) - Omni Tech in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, omniversal, type7]"
  },
  {
    "filename": "tech_level_primitive.artifact",
    "artifact": "tech_level_primitive",
    "name": "Primitive Tech",
    "created": "2025-06-04",
    "purpose": "Canonical master artifact for Type 0 (Primitive) tech level in FusionGirl.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding]"
  },
  {
    "filename": "tech_level_progression_rules.artifact",
    "artifact": "tech_level_progression_rules",
    "created": "2025-06-04",
    "purpose": "Document rules and triggers for advancing/regressing tech levels.",
    "type": "rules",
    "tags": "[tech, progression, rules, artifact]",
    "format": "markdown"
  },
  {
    "filename": "tech_level_spacefaring.artifact",
    "artifact": "tech_level_spacefaring",
    "name": "Spacefaring Tech",
    "created": "2025-06-04",
    "purpose": "Canonical master artifact for Type I (late) tech level in FusionGirl.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding]"
  },
  {
    "filename": "tech_level_spacer.artifact",
    "artifact": "tech_level_spacer",
    "name": "Spacer Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type I (Mid) - Spacer Tech in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, type1]"
  },
  {
    "filename": "tech_level_star.artifact",
    "artifact": "tech_level_star",
    "name": "Star Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type II (Mid) - Star Tech in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, type2]"
  },
  {
    "filename": "tech_level_stellar.artifact",
    "artifact": "tech_level_stellar",
    "name": "Stellar Tech",
    "created": "2025-06-04",
    "purpose": "Canonical master artifact for Type II (Stellar) tech level in FusionGirl.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding]"
  },
  {
    "filename": "tech_level_super.artifact",
    "artifact": "tech_level_super",
    "name": "Super Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type III (Early) - Super Tech (Supergalactic/Intergalactic Age) in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, supergalactic, type3]"
  },
  {
    "filename": "tech_level_template.artifact",
    "artifact": "tech_level_template",
    "name": "Tech Level Template",
    "created": "2025-06-04",
    "purpose": "Canonical template for defining a tech level in FusionGirl. Use as a base for all tech level artifacts.",
    "type": "tech_level",
    "tags": "[template, tech, progression, worldbuilding]",
    "format": "markdown"
  },
  {
    "filename": "tech_level_test_plan.artifact",
    "artifact": "tech_level_test_plan",
    "created": "2025-06-04",
    "purpose": "Define test cases and validation criteria for tech level features.",
    "type": "testplan",
    "tags": "[tech, test, artifact]",
    "format": "markdown"
  },
  {
    "filename": "tech_level_ui_ux_plan.artifact",
    "artifact": "tech_level_ui_ux_plan",
    "created": "2025-06-04",
    "purpose": "Plan UI/UX for displaying and interacting with tech levels.",
    "type": "uiux",
    "tags": "[tech, ui, ux, artifact]",
    "format": "markdown"
  },
  {
    "filename": "tech_level_ultra.artifact",
    "artifact": "tech_level_ultra",
    "name": "Ultra Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type III (Late) - Ultra Tech (Cosmospheric/Cosmic Age) in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, cosmospheric, type3]"
  },
  {
    "filename": "tech_level_warp.artifact",
    "artifact": "tech_level_warp",
    "name": "Warp Tech",
    "created": "2025-06-04",
    "purpose": "Master artifact for Type II (Late) - Warp Tech (Subgalactic/Interstellar Age) in FusionGirl, per canonical tech level documentation.",
    "type": "tech_level",
    "format": "markdown",
    "tags": "[master, tech, progression, worldbuilding, subgalactic, type2]"
  },
  {
    "filename": "test_artifact_2025-06-03.artifact",
    "artifact": "test_artifact_2025-06-03",
    "created": "2025-06-03",
    "purpose": "Test artifact for verifying artifact index automation.",
    "type": "test",
    "tags": "[test, automation, artifact, index]",
    "format": "markdown",
    "related": "["
  },
  {
    "filename": "test_results_2025-06-03.artifact",
    "artifact": "test_results_2025-06-03",
    "created": "2025-06-03",
    "purpose": "Store raw output from test runs and benchmarks for reference and debugging.",
    "type": "test",
    "tags": "[test, results, debugging]",
    "format": "raw text",
    "related": "["
  },
  {
    "filename": "testing_validation_strategy_2025-06-05.artifact",
    "artifact": "testing_validation_strategy_2025-06-05",
    "created": "2025-06-05",
    "purpose": "Outline a comprehensive approach for testing gameplay loops, narrative branches, and mod/plugin integration.",
    "type": "testplan",
    "format": "markdown"
  },
  {
    "filename": "tilemap_system_design.artifact",
    "artifact": "tilemap_system_design",
    "created": "2025-06-05",
    "purpose": "Design and implementation plan for the tilemap and chunk management system, including toroidal world logic.",
    "type": "design",
    "format": "markdown + pseudocode",
    "related": ""
  },
  {
    "filename": "todo_triage_2025-06-08.artifact",
    "artifact": "todo_triage_2025-06-08.artifact",
    "created": "2025-06-08",
    "last_updated": "2025-06-08",
    "owner": "GitHub Copilot",
    "status": "draft",
    "related_artifacts": "",
    "- **[A] Actionable": "** Clear, implementable, and relevant.",
    "- **[C] Clarify": "** Needs more detail or context before action.",
    "- **[R] Remove": "** Obsolete, redundant, or no longer relevant."
  },
  {
    "filename": "ui_ux_accessibility_2025-06-06.artifact",
    "artifact": "ui_ux_accessibility_2025-06-06",
    "created": "2025-06-06",
    "purpose": "UI/UX and accessibility plan for ley line navigation, Magneto Speeder, and puzzle systems.",
    "type": "design",
    "format": "markdown"
  },
  {
    "filename": "ul_integration_roadmap_2025-06-06.artifact",
    "artifact": "ul_integration_roadmap_2025-06-06",
    "created": "2025-06-06",
    "purpose": "Roadmap for robust, unified Universal Language (UL) system integration across ProtoFusionGirl",
    "format": "markdown",
    "tags": "[universal-language, integration, roadmap, artifact, automation, modding, event-system, validation, ui-ux]",
    "related": "[ul_engine_refactor_2025-06-06.artifact, ul_resource_schema_2025-06-06.artifact, ul_event_spec_2025-06-06.artifact, ul_modding_support_2025-06-06.artifact, ul_validation_matrix_2025-06-06.artifact]"
  },
  {
    "filename": "ul_onboarding_guide.artifact"
  },
  {
    "filename": "ul_validation_matrix_2025-06-06.artifact"
  },
  {
    "filename": "universal_language_psionics_2025-06-06.artifact",
    "artifact": "universal_language_psionics_2025-06-06",
    "created": "2025-06-06",
    "purpose": "Modular system for Universal Language puzzles and psionic abilities, scaling with narrative.",
    "type": "design",
    "format": "markdown"
  },
  {
    "filename": "world_state_api_modding_2025-06-04.artifact",
    "artifact": "world_state_api_modding_2025-06-04",
    "name": "World State API & Modding Interface",
    "created": "2025-06-04",
    "purpose": "Documents the public API for AI agents, mods, and external tools to interact with world state and events.",
    "type": "api",
    "format": "markdown",
    "tags": "[api, modding, world, state, event, interface]"
  },
  {
    "filename": "world_state_data_model_2025-06-04.artifact",
    "artifact": "world_state_data_model_2025-06-04",
    "name": "World State Data Model",
    "created": "2025-06-04",
    "purpose": "Defines TypeScript interfaces/types for all major world state domains in ProtoFusionGirl.",
    "type": "data-model",
    "format": "markdown",
    "tags": "[data, model, types, world, state, core]"
  },
  {
    "filename": "world_state_integration_plan_2025-06-04.artifact",
    "artifact": "world_state_integration_plan_2025-06-04",
    "name": "World State Integration & Migration Plan",
    "created": "2025-06-04",
    "purpose": "Step-by-step plan for integrating the unified world state/event system with existing code and minimizing disruption.",
    "type": "plan",
    "format": "markdown",
    "tags": "[integration, migration, world, state, event, plan]"
  },
  {
    "filename": "world_state_onboarding_guide_2025-06-04.artifact",
    "artifact": "world_state_onboarding_guide_2025-06-04",
    "name": "World State Onboarding & Developer Guide",
    "created": "2025-06-04",
    "purpose": "Quickstart and reference for new contributors (human or AI) to understand and extend the world state/event system.",
    "type": "guide",
    "format": "markdown",
    "tags": "[onboarding, guide, world, state, event, developer]"
  },
  {
    "filename": "world_state_system_design_2025-06-04.artifact",
    "artifact": "world_state_system_design_2025-06-04",
    "name": "Unified World State & Event System Design",
    "created": "2025-06-04",
    "purpose": "Blueprint for the architecture, responsibilities, and integration points of the WorldStateManager and event bus in ProtoFusionGirl.",
    "type": "design",
    "format": "markdown",
    "tags": "[system, world, event, architecture, design, core]"
  },
  {
    "filename": "world_state_testing_strategy_2025-06-04.artifact",
    "artifact": "world_state_testing_strategy_2025-06-04",
    "name": "World State Testing & Validation Strategy",
    "created": "2025-06-04",
    "purpose": "Outlines the approach for unit, integration, and regression testing of the unified world state/event system.",
    "type": "test-strategy",
    "format": "markdown",
    "tags": "[testing, validation, world, state, event, core]"
  }
]

---

(End of artifact)